@model NamrataKalyani.Models.RegistrationModel

@{
    ViewBag.Title = "Registration";

}

<h2>Registration</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="col-md-12">
        <div class="col-md-3"></div>
        <div class="col-md-6">
            <div class="panel panel-default ">
                <div class="panel-heading headingcolor">
                    @Html.Label("REGISTRATION")
                </div>
                <div class="panel-body bagraoung">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @*<div class="form-group">
                            @Html.LabelFor(model => model.rid, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.rid, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.rid, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.emalid, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.emalid, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.emalid, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.confirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.confirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div>
                        <div class="col-md-12">
                            <span>Center</span>
                            @Html.DropDownList("Center","Select Center",new {@class="dropdown-header" })
                        </div>
                    </div>*@

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                </div>
            </div>
        </div>
                }

                @*<div>
                    @Html.ActionLink("Back to List", "Index")
                </div>*@

                @section Scripts {
                    @Scripts.Render("~/bundles/jqueryval")
                }
